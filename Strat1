# Install these libraries if you haven't already
# !pip install yfinance pandas ta matplotlib

import yfinance as yf
import pandas as pd
import ta
import matplotlib.pyplot as plt

# Download historical data (e.g., S&P 500 data)
data = yf.download("SPY", start="2020-01-01", end="2023-01-01", interval="1d")

# Calculate Moving Averages
data['MA_50'] = data['Close'].rolling(window=50).mean()
data['MA_200'] = data['Close'].rolling(window=200).mean()

# Calculate ADX
data['ADX'] = ta.trend.adx(data['High'], data['Low'], data['Close'], window=14)

# Define your trading signals
def generate_signals(data):
    data['Buy_Signal'] = (data['MA_50'] > data['MA_200']) & (data['ADX'] > 25) # Trend condition
    data['Sell_Signal'] = (data['MA_50'] < data['MA_200']) & (data['ADX'] > 25) # Exit condition

    return data

# Apply signals
data = generate_signals(data)

# Backtesting simple results - visualization
plt.figure(figsize=(14, 7))
plt.plot(data['Close'], label='Close Price', color='black', alpha=0.5)
plt.plot(data['MA_50'], label='50-day MA', color='blue', alpha=0.75)
plt.plot(data['MA_200'], label='200-day MA', color='orange', alpha=0.75)
plt.scatter(data.index, data['Close'][data['Buy_Signal']], marker='^', color='g', alpha=1, label='Buy Signal')
plt.scatter(data.index, data['Close'][data['Sell_Signal']], marker='v', color='r', alpha=1, label='Sell Signal')
plt.title("Trend Following Strategy")
plt.legend()
plt.show()
